plugins {
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'com.moowork.node' version '1.3.1'
    id 'java'
    id 'war'
}

group = 'com.microfrontend'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    //testImplementation 'org.springframework.security:spring-security-test'

    //runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
}

test {
    //useJUnitPlatform()
}

task yarnInstall(type: YarnTask) {
    workingDir = file("../frontend")
    args = ['install', '--max_old_space_size=4096']

    doLast {
        println 'yarn install success!!'
    }
}

task yarnBuild(type: YarnTask) {
//    workingDir = file("../frontend")
//    args = ['build']

    doLast {
        println 'yarn build success!!'
    }
}

// 빌드된 결과 resources로 이동
task buildWith(type: Copy) {
    from "../frontend/build"
    into 'build/resources/main/static/.'

    doLast {
        println 'build copy success!!'
        //build
    }
}

task removeBuildResource(type: Delete) {
    delete 'build/resources/main/static'

    doLast {
        println 'remove build resource'
    }
}


yarnInstall.dependsOn removeBuildResource
//yarnBuild.dependsOn yarnInstall
//buildWith.dependsOn yarnBuild
buildWith
buildWith.finalizedBy(build)

